{"name":"JSystem","tagline":"JSystem is a professional open-source framework for writing and managing automated system tests.","body":"# JSystem Framework #\r\n\r\n[JSystem Site](http://www.jsystem.org/)</br>\r\n\r\n[JSystem Release Notes](https://github.com/Top-Q/jsystem/wiki/Release-Notes)</br>\r\n\r\nJSystem is a professional open-source framework for writing and managing automated system tests.\r\n\r\nJSystem is a collaborative environment for all members of the QA lifecycle:\r\n\r\n* The automation expert: JSystem helps the test automation expert manage any type of user, JSystem has built in integration with Selenium, Autoit, and practically any API based protocols like Telnet/SSH/RS232, SNMP, XML, Tcl, etc\r\n\r\n* QA engineer: with JSystem the QA engineer can create and run test-scenarios without any need to see or touch code using simple drag and drop approach.\r\n\r\n* The testing manager: JSystem provides a central framework for the most distributed and complex testing environments, enabling central management and reporting that give a clear picture of project status.\r\n\r\nWith a unique methodology that handles automation as a structured software project, JSystem enables true scalability of the testing project - by leveraging pre-written test-scripts to create new tests.\r\nJSystem is used by many enterprise organizations like: Juniper, Nokia-Siemens, ECI, Alcatel-Lucent, Avaya Ericson and many more\r\n## The JSystem framework is comprised of the following components: ##\r\n\r\n* JSystem Services (Java API) - exposes JSystem services.\r\n* JSystem Drivers- Java modules used to interface with devices and applications in the system under test.\r\n* JSystem GUI Interface (JRunner) - GUI application interface used for creating and running test scenarios.\r\n* JSystem Agent - an execution engine used to run scenarios on a distributed setup.\r\n* JSystem Eclipse plug-in - accelerates the development environment setup and enforces JSystem conventions.\r\n* JSystem deploys several open source projects, two of the central open source projects are JUnit used for writing tests and Ant used as the scenario execution engine.\r\n\r\n# How to work with the project #\r\n1. Clone the whole jsystem root folder\r\n2. Eclipse - import the jsystem root folder with all its projects\r\n3. Run maven install on the jsystem-parent project (without the tests)\r\n4. Run maven install on the jsystem-runner project\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}